tags:
  ccd-idam-pr: true

java:
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  environment:
    CASE_DATA_STORE_BASEURL: http://adoption-cos-api-pr-${CHANGE_ID}-ccd-data-store-api
    CASE_DOCUMENT_AM_BASEURL: http://adoption-cos-api-pr-${CHANGE_ID}-ccd-case-document-am-api
    CITIZEN_UPDATE_CASE_STATE_ENABLED: true
    APP_INSIGHTS_KEY: ${APP_INSIGHTS_KEY}
    APPLICATIONINSIGHTS_CONNECTION_STRING: ${APP_INSIGHTS_CONNECTION_KEY}
    MULTI_CHILDREN_CUI_URL: https://adoption-web-pr-956.service.core-compute-preview.internal/new-application-redirect
    LA_PORTAL_BASEURL: https://adoption-web-pr-956.service.core-compute-preview.internal/la-portal/kba-case-ref

  keyVaults:
    adoption:
      secrets:
        - name: uk-gov-notify-api-key
          alias: UK_GOV_NOTIFY_API_KEY
        - name: s2s-secret-cos-api
          alias: S2S_SECRET
        - name: idam-secret
          alias: IDAM_CLIENT_SECRET
        - name: idam-system-user-name
          alias: IDAM_SYSTEM_UPDATE_USERNAME
        - name: idam-system-user-password
          alias: IDAM_SYSTEM_UPDATE_PASSWORD
        - name: launchDarkly-sdk-key
          alias: LAUNCH_DARKLY_SDK_KEY
        - name: caseworker-username
          alias: CASEWORKER_USERNAME
        - name: caseworker-password
          alias: CASEWORKER_PASSWORD
        - name: AppInsightsInstrumentationKey
          alias: APP_INSIGHTS_KEY
        - name: send-grid-api-key
          alias: SEND_GRID_API_KEY
        - name: sendgrid-notify-from-email
          alias: SEND_GRID_NOTIFY_FROM_EMAIL

idam-pr:
  enabled: true
  releaseNameOverride: ${SERVICE_NAME}-ccd-idam-pr
  redirect_uris:
    CCD Admin:
      - https://admin-web-${SERVICE_FQDN}/oauth2redirect
    XUI:
      - https://xui-${SERVICE_FQDN}/oauth2/callback

ccd:
  ccd:
    definitionImporter:
      enabled: false
    managementWeb:
      enabled: true
    apiGatewayWeb:
      enabled: true
    s2s:
      enabled: false
    elastic:
      enabled: true

  ingressHost: ${SERVICE_FQDN}
  ingressIP: ${INGRESS_IP}
  consulIP: ${CONSUL_LB_IP}

  global:
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    ccdAdminWebIngress: admin-web-${SERVICE_FQDN}
    ccdApiGatewayIngress: gateway-${SERVICE_FQDN}
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    postgresHostname: "adoption-preview.postgres.database.azure.com"
    postgresSecret: postgres
    databaseNamePrefix: "pr-${CHANGE_ID}-"

  ccd-api-gateway-web:
    nodejs:
      disableKeyVaults: true
      imagePullPolicy: Always
      environment:
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
        IDAM_SERVICE_KEY: ${CCD_API_GATEWAY_S2S_KEY}
        IDAM_OAUTH2_CLIENT_SECRET: ${CCD_API_GATEWAY_OAUTH2_CLIENT_SECRET}
        PROXY_DOCUMENT_MANAGEMENT: http://dm-store-aat.service.core-compute-aat.internal
      ingressHost: gateway-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}

  ccd-data-store-api:
    java:
      disableKeyVaults: true
      imagePullPolicy: Always
      environment:
        DATA_STORE_DB_HOST: '{{ tpl .Values.global.postgresHostname $}}'
        DATA_STORE_IDAM_KEY: ${DATA_STORE_S2S_KEY}
        DATA_STORE_DEFAULT_LOG_LEVEL: info
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_gw,ccd_admin,ccd_ps,adoption_cos_api,adoption_web,xui_webapp,ccd_case_document_am_api,fis_cos_api
        CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: adoption_cos_api,fis_cos_api
        CCD_DM_DOMAIN: http://dm-store-aat.service.core-compute-aat.internal
        CCD_DOCUMENT_URL_PATTERN: ^https?://(((?:api-gateway\.preprod\.dm\.reform\.hmcts\.net|dm-store-aat\.service\.core-compute-aat\.internal(?::\d+)?)\/documents\/[A-Za-z0-9-]+(?:\/binary)?)|(em-hrs-api-aat\.service\.core-compute-aat\.internal(?::\d+)?\/hearing-recordings\/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\/segments\/[0-9]))
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        CASE_DOCUMENT_AM_URL: http://adoption-cos-api-pr-${CHANGE_ID}-ccd-case-document-am-api
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOSTS: ${SERVICE_NAME}-es-master:9200
        ELASTIC_SEARCH_DATA_NODES_HOSTS:  http://${SERVICE_NAME}-es-master:9200
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}

  am-role-assignment-service:
    java:
      disableKeyVaults: true
      keyVaults:
        am:
          secrets:
            - role-assignment-service-LD-SDK-KEY

  ccd-definition-store-api:
    java:
      disableKeyVaults: true
      imagePullPolicy: Always
      environment:
        DEFINITION_STORE_DB_HOST: '{{ tpl .Values.global.postgresHostname $}}'
        DEFINITION_STORE_IDAM_KEY: ${DEFINITION_STORE_S2S_KEY}
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOST: ${SERVICE_NAME}-es-master
      ingressHost: ccd-definition-store-${SERVICE_FQDN}

  ccd-user-profile-api:
    java:
      disableKeyVaults: true
      imagePullPolicy: Always
      enviroment:
        USER_PROFILE_DB_HOST: '{{ tpl .Values.global.postgresHostname $}}'
      ingressHost: ccd-user-profile-api-${SERVICE_FQDN}

  ccd-admin-web:
    nodejs:
      disableKeyVaults: true
      image: hmctspublic.azurecr.io/ccd/admin-web:latest
      ingressHost: admin-web-${SERVICE_FQDN}
      environment:
        USER_PROFILE_DB_HOST: '{{ tpl .Values.global.postgresHostname $}}'
        IDAM_ADMIN_WEB_SERVICE_KEY: ${ADMIN_S2S_KEY}
        IDAM_OAUTH2_AW_CLIENT_SECRET: ${ADMIN_WEB_IDAM_SECRET}

  importer:
    userprofile:
      enabled: true
      jurisdictions:
        - ADOPTION
      users:
        - adoption_caseworker_solicitor@mailinator.com|ADOPTION|A58|Draft
        - AdoptionCaseWorkerUser@AAT.com|ADOPTION|A58|Draft
        - TEST_CASE_WORKER_USER@mailinator.com|ADOPTION|A58|Draft
        - TEST_SOLICITOR@mailinator.com|ADOPTION|A58|Draft
        - adoption_as_caseworker_admin@mailinator.com|ADOPTION|A58|Draft
        - civil_unspecified@mailinator.com|ADOPTION|A58|Draft

  elasticsearch:
    nameOverride: ${SERVICE_NAME}-es
    clusterName: "es"
    replicas: 1

  logstash:
    image: "hmctspublic.azurecr.io/imported/logstash/logstash"
    imageTag: "7.16.1"
    imagePullPolicy: "IfNotPresent"
    logstashJavaOpts: "-Xmx1g -Xms512M"
    extraInitContainers: |
      - name: download-postgres-jdbc
        image: hmctspublic.azurecr.io/curl:7.70.0
        command: ['curl', '-L', 'https://jdbc.postgresql.org/download/postgresql-42.2.18.jar', '-o', '/logstash-lib/postgresql.jar']
        volumeMounts:
        - name: logstash-lib
          mountPath: /logstash-lib
    extraEnvs:
      - name: DATA_STORE_USER
        value: hmcts
      - name: DATA_STORE_PASS
        value: hmcts
      - name: DATA_STORE_URL
        value: "jdbc:postgresql://adoption-preview.postgres.database.azure.com:5432/{{ .Values.global.databaseNamePrefix }}data-store?sslmode=require&stringtype=unspecified"
      - name: ES_HOSTS
        value: "${SERVICE_NAME}-es-master"
    extraVolumes: |
      - name: logstash-lib
        emptyDir: {}
      - name: database-secret-volume
        secret:
          secretName: postgres
    extraVolumeMounts: |
      - name: logstash-lib
        mountPath: /usr/share/logstash/ccd
      - name: database-secret-volume
        mountPath: /etc/logstash/secrets
        readOnly: true
    logstashConfig:
      logstash.yml: |
        http.host: 0.0.0.0
        xpack.monitoring.enabled: false
        xpack.monitoring.elasticsearch.hosts: ["http://{{ .Release.Name }}-es-master:9200"]
        queue.type: persisted
        dead_letter_queue.enable: true
      pipelines.yml: |
        - pipeline.id: main
          path.config: "/usr/share/logstash/pipeline/{01_input,02_filter,03_output}.conf"
          queue.type: persisted
    logstashPipeline:
      01_input.conf: |
        input  {
          jdbc {
            jdbc_connection_string => "jdbc:postgresql://adoption-preview.postgres.database.azure.com:5432/pr-${CHANGE_ID}-data-store?sslmode=require&stringtype=unspecified"
            jdbc_user => "hmcts"
            jdbc_password_filepath => "/etc/logstash/secrets/PASSWORD"
            jdbc_validate_connection => true
            jdbc_validation_timeout => "1"
            jdbc_driver_library => "/usr/share/logstash/ccd/postgresql.jar"
            jdbc_driver_class => "org.postgresql.Driver"
            jdbc_default_timezone => "UTC"
            statement => "UPDATE case_data SET marked_by_logstash = true WHERE marked_by_logstash = false RETURNING id, created_date, last_modified, jurisdiction, case_type_id, state, last_state_modified_date, data::TEXT as json_data, data_classification::TEXT as json_data_classification, reference, security_classification, supplementary_data::TEXT as json_supplementary_data"
            clean_run => false
            schedule => "* * * * * *"
          }
        }
      02_filter.conf: |
        filter{
          json{
              source => "json_data"
              target => "data"
              remove_field => ["json_data"]
              }
              json{
                  source => "json_supplementary_data"
                  target => "supplementary_data"
                  remove_field => ["json_supplementary_data"]
              }
              json{
                  source => "json_data_classification"
                  target => "data_classification"
                  remove_field => ["json_data_classification"]
              }
              if [data][SearchCriteria] {
                  clone {
                      clones => ["SearchCriteria"]
                  }
              }
              if [type] == "SearchCriteria" {
                  if [data][SearchCriteria] {
                      mutate {
                        rename => {"[data][SearchCriteria]" => "[data_new][SearchCriteria]" }
                      }
                  }
                  if [data][caseManagementLocation] {
                      mutate {
                        rename => {"[data][caseManagementLocation]" => "[data_new][caseManagementLocation]" }
                      }
                  }
                  if [data][CaseAccessCategory] {
                    mutate {
                        rename => {"[data][CaseAccessCategory]" => "[data_new][CaseAccessCategory]" }
                    }
                  }
                  if [data][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data][caseNameHmctsInternal]" => "[data_new][caseNameHmctsInternal]" }
                      }
                  }
                  if [data][caseManagementCategory] {
                      mutate {
                        rename => {"[data][caseManagementCategory]" => "[data_new][caseManagementCategory]" }
                      }
                  }
                  if [supplementary_data][HMCTSServiceId] {
                      mutate {
                        rename => {"[supplementary_data][HMCTSServiceId]" => "[supplementary_data_new][HMCTSServiceId]" }
                      }
                  }
                  if [data_classification][SearchCriteria] {
                      mutate {
                        rename => {"[data_classification][SearchCriteria]" => "[data_classification_new][SearchCriteria]" }
                      }
                  }
                  if [data_classification][CaseAccessCategory] {
                    mutate {
                          rename => {"[data_classification][CaseAccessCategory]" => "[data_classification_new][CaseAccessCategory]" }
                    }
                  }
                  if [data_classification][caseManagementLocation] {
                    mutate {
                        rename => {"[data_classification][caseManagementLocation]" => "[data_classification_new][caseManagementLocation]" }
                    }
                  }
                  if [data_classification][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data_classification][caseNameHmctsInternal]" => "[data_classification_new][caseNameHmctsInternal]" }
                      }
                  }
                  if [data_classification][caseManagementCategory] {
                      mutate {
                        rename => {"[data_classification][caseManagementCategory]" => "[data_classification_new][caseManagementCategory]" }
                      }
                  }
                  mutate { remove_field =>[ "data" ,"supplementary_data", "data_classification", "last_state_modified_date", "type","last_modified", "created_date" ] }
                  mutate {
                          rename => { "[data_new]" => "data" }
                          rename => { "[supplementary_data_new]"  => "supplementary_data" }
                          rename => { "[data_classification_new]"  => "data_classification" }
                  }
                  mutate {
                    add_field => { "index_id" => "global_search" }
                  }
                  mutate {
                    lowercase => [ "index_id" ]
                  }
              } else {
                  mutate {
                      add_field => { "index_id" => "%{case_type_id}_cases" }
                }
              mutate {
                lowercase => [ "index_id" ]
              }
              }
        }
      03_output.conf: |
        output {
            elasticsearch {
                hosts => ["http://{{ .Release.Name }}-es-master:9200"]
                sniffing => false
                index => "%{[index_id]}"
                document_type => "_doc"
                document_id => "%{id}"
                timeout => 60
            }
        }

xui-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:latest
    ingressHost: xui-${SERVICE_FQDN}
    environment:
      HEALTH_CCD_COMPONENT_API: http://${SERVICE_NAME}-ccd-api-gw/health
      HEALTH_CCD_DATA_API: http://${SERVICE_NAME}-ccd-data-store-api/health
      HEALTH_TERMS_AND_CONDITIONS_API: https://xui-terms-and-conditions-${SERVICE_FQDN}
      SERVICES_CCD_COMPONENT_API: http://${SERVICE_NAME}-ccd-api-gw
      SERVICES_CCD_DATA_STORE_API: http://${SERVICE_NAME}-ccd-data-store-api
      SERVICES_DOCUMENTS_API_V2: http://adoption-cos-api-pr-${CHANGE_ID}-ccd-case-document-am-api
      SERVICES_CCD_CASE_ASSIGNMENT_API: http://${SERVICE_NAME}-aac-manage-case-assignment
      SERVICES_TERMS_AND_CONDITIONS: https://xui-terms-and-conditions-${SERVICE_FQDN}
      JURISDICTIONS: ADOPTION
      FEATURE_REDIS_ENABLED: false
      NODE_OPTIONS: --max-old-space-size=900
      NODE_TLS_REJECT_UNAUTHORIZED: 0

ccd-case-document-am-api:
  enabled: true
  java:
    disableKeyVaults: true
    releaseNameOverride: ${SERVICE_NAME}-ccd-case-document-am-api
    imagePullPolicy: Always
    image: hmctspublic.azurecr.io/ccd/case-document-am-api:latest
    ingressHost: ccd-case-document-am-api-${SERVICE_FQDN}
    environment:
      CASE_DOCUMENT_S2S_AUTHORISED_SERVICES: ccd_case_document_am_api,ccd_gw,xui_webapp,ccd_data,bulk_scan_processor,dg_docassembly_api,bulk_scan_orchestrator,adoption_cos_api,adoption_web
      DM_STORE_BASE_URL: http://dm-store-aat.service.core-compute-aat.internal
      CCD_DATA_STORE_API_BASE_URL: http://adoption-cos-api-pr-${CHANGE_ID}-ccd-data-store-api
      IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
      IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
      OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
      S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      CASE_DOCUMENT_AM_API_S2S_SECRET: ${CCD_CASE_DOCUMENT_AM_API_SECRET}

LA_PORTAL_BASEURL: https://adoption-web-pr-${CHANGE_ID}.service.core-compute-preview.internal/la-portal/kba-case-ref

postgresql:
  enabled: true
  flexibleserver: adoption-preview
  setup:
    databases:
      - name: "pr-${CHANGE_ID}-data-store"
      - name: "pr-${CHANGE_ID}-definition-store"
      - name: "pr-${CHANGE_ID}-user-profile"
      - name: "pr-${CHANGE_ID}-draftstore"
      - name: "pr-${CHANGE_ID}-payment"
      - name: "pr-${CHANGE_ID}-evidence"
      - name: "pr-${CHANGE_ID}-annotation"
      - name: "pr-${CHANGE_ID}-role-assignment"
