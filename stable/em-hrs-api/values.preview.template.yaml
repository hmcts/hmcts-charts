java:
  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  readinessDelay: 45
  devmemoryRequests: 2048Mi
  devcpuRequests: 2000m
  devmemoryLimits: 4096Mi
  devcpuLimits: 4000m
  keyVaults:
    em-hrs-api:
      secrets:
        - name: idam-system-user-name
          alias: HRS_SYSTEM_USER
        - name: idam-system-user-password
          alias: HRS_SYSTEM_USER_PASSWORD
        - name: microservicekey-em-hrs-api
          alias: S2S_KEY
        - name: notification-api-key-pretend-to-send
          alias: NOTIFICATION_API_KEY
  secrets:
    CVP_BLOB_ACCOUNT_NAME:
      secretRef: storage-account-cvp-{{ .Release.Name }}
      key: storage_account_name
    CVP_BLOB_ACCESS_KEY:
      secretRef: storage-secret-cvp-{{ .Release.Name }}
      key: accessKey
    HRS_BLOB_ACCOUNT_NAME:
      secretRef: storage-account-hrs-{{ .Release.Name }}
      key: storage_account_name
    HRS_BLOB_ACCESS_KEY:
      secretRef: storage-secret-hrs-{{ .Release.Name }}
      key: accessKey
  environment:
    HRS_CVP_DEST_CONTAINER_NAME: hrs-cvp
    HRS_VH_DEST_CONTAINER_NAME: hrs-vh
    CVP_STORAGE_CONTAINER_NAME: cvp
    SPRING_DATASOURCE_URL: jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/javadatabase?ssl=disable
    SPRING_DATASOURCE_USERNAME: "{{ .Values.postgresql.auth.username}}"
    SPRING_DATASOURCE_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    CCD_DATA_API_URL: http://${SERVICE_NAME}-ccd-data-store-api
    OPEN_ID_API_BASE_URI: https://idam-web-public.aat.platform.hmcts.net/o
    ENABLE_DB_MIGRATE: true
    RUN_DB_MIGRATION_ON_STARTUP: true
    CVP_STORAGE_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=$(CVP_BLOB_ACCOUNT_NAME);AccountKey=$(CVP_BLOB_ACCESS_KEY);EndpointSuffix=core.windows.net"
    STORAGEACCOUNT_PRIMARY_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=$(HRS_BLOB_ACCOUNT_NAME);AccountKey=$(HRS_BLOB_ACCESS_KEY);EndpointSuffix=core.windows.net"

  postgresql:
    enabled: true
    primary:
      initdb:
        scripts:
          init.sql: |
            CREATE DATABASE "data-store" WITH OWNER = javapostgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "definition-store" WITH OWNER = javapostgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "user-profile" WITH OWNER = javapostgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "role-assignment" WITH OWNER = javapostgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;

cvpblobstorage:
  enabled: true
  resourceGroup: em-aso-preview-rg
  releaseNameOverride: cvp-{{ .Release.Name }}
  teamName: "EM"
  location: uksouth
  setup:
    containers:
      - cvp

hrsblobstorage:
  enabled: true
  resourceGroup: em-aso-preview-rg
  releaseNameOverride: hrs-{{ .Release.Name }}
  teamName: "EM"
  location: uksouth
  setup:
    containers:
      - hrs-cvp
      - hrs-vh

ccd:
  enabled: true
  ccd:
    adminWeb:
      enabled: false
    apiGatewayWeb:
      enabled: true
    definitionImporter:
      enabled: false
    managementWeb:
      enabled: false
    s2s:
      enabled: false
    postgresql:
      enabled: false
    ras:
      enabled: false
    userProfileImporter:
      enabled: false
    userProfile:
      enabled: false
  global:
    ccdApiGatewayIngress: http://${SERVICE_NAME}-ccd-api-gw
    ccdDataStoreUrl: ${CCD_DATA_API_URL}
    ccdDefinitionStoreUrl: ${CCD_DEF_API}
    ccdUserProfileUrl: http://ccd-user-profile-api-aat.service.core-compute-aat.internal
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    postgresSecret: postgres

  ccd-api-gateway-web:
    nodejs:
      image: hmctspublic.azurecr.io/ccd/api-gateway-web:latest
      imagePullPolicy: Always
      environment:
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
        IDAM_SERVICE_KEY: ${CCD_API_GATEWAY_S2S_SECRET}
        IDAM_OAUTH2_CLIENT_SECRET: ${CCD_API_GATEWAY_IDAM_CLIENT_SECRET}
        PROXY_DOCUMENT_MANAGEMENT: http://dm-store-aat.service.core-compute-aat.internal
      ingressHost: gateway-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}

  ccd-data-store-api:
    java:
      imagePullPolicy: Always
      devcpuRequests: 500m
      devmemoryRequests: 4096Mi
      devmemoryLimits: 8192Mi
      autoscaling:
        enabled: false
      environment:
        CASE_DOCUMENT_AM_API_ATTACH_DOCUMENT_ENABLED: true
        DATA_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DATA_STORE_IDAM_KEY: ${CCD_DATA_STORE_S2S_SECRET}
        DATA_STORE_DB_OPTIONS: "?stringtype=unspecified"
        SPRING_DATASOURCE_USERNAME: "{{ .Values.postgresql.auth.username}}"
        SPRING_DATASOURCE_PASSWORD: "{{ .Values.postgresql.auth.password}}"
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_gw,ccd_ps,bulk_scan_orchestrator,ccpay_bubble,ctsc_work_allocation,em_ccd_orchestrator,xui_webapp,civil_service,ccd_case_document_am_api,aac_manage_case_assignment,em_gw,em_hrs_api
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat2.internal:8443/openam/oauth2/realms/root/realms/hmcts
        CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: civil_service,aac_manage_case_assignment
        CASE_DOCUMENT_AM_URL: http://${SERVICE_NAME}-cdam
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        CCD_MULTIPARTY_FIX_ENABLED: true
        CCD_MULTIPARTY_LOG_LEVEL: DEBUG
        CCD_MULTIPARTY_CASE_TYPES: CIVIL
        CCD_MULTIPARTY_EVENTS: DEFENDANT_RESPONSE,ACKNOWLEDGE_CLAIM,CLAIMANT_RESPONSE,queryManagementRaiseQuery,queryManagementRespondQuery
        ROLE_ASSIGNMENT_URL: http://am-role-assignment-service-aat.service.core-compute-aat.internal
        DEFINITION_STORE_HOST: ${CCD_DEF_API}
      secrets:
        DATA_STORE_DB_PASSWORD:
          secretRef: "{{ .Values.global.postgresSecret }}"
          key: PASSWORD
          disabled: true
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}

  ccd-definition-store-api:
    java:
      imagePullPolicy: Always
      devcpuRequests: 500m
      devmemoryRequests: 512Mi
      devcpuLimits: 2
      devmemoryLimits: 1Gi
      environment:
        DEFINITION_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DEFINITION_STORE_DB_OPTIONS: "?stringtype=unspecified"
        SPRING_DATASOURCE_USERNAME: "{{ .Values.postgresql.auth.username}}"
        SPRING_DATASOURCE_PASSWORD: "{{ .Values.postgresql.auth.password}}"
        DEFINITION_STORE_IDAM_KEY: ${CCD_DEFINITION_STORE_S2S_SECRET}
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        DEFINITION_STORE_TX_TIMEOUT_DEFAULT: 60
        WELSH_TRANSLATION_ENABLED: false
        DEFINITION_STORE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_gw,ccd_admin,jui_webapp,pui_webapp,aac_manage_case_assignment,xui_webapp,am_org_role_mapping_service,em_hrs_api,em_gw,ccd_case_disposer,ccd_definition_store_api
      secrets:
        DEFINITION_STORE_DB_PASSWORD:
          secretRef: "{{ .Values.global.postgresSecret }}"
          key: PASSWORD
          disabled: true
      ingressHost: ccd-definition-store-${SERVICE_FQDN}

  postgresql:
    persistence:
      enabled: false
